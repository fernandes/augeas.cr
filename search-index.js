crystal_doc_search_index_callback({"repository_name":"augeas","body":"# augeas\n\nCrystal C Bindings for [Augeas](https://augeas.net/)\n\n## Installation\n\n### Pre-Requisites\n\nBefore adding this shard, need to install the libaugeas.\n\nOn Mac `brew install augeas`\n\nOn Linux `apt-get install libaugeas-dev`\n\n### Crystal\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  augeas:\n    github: fernandes/augeas\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"augeas\"\n```\n\n### Initializing Augeas\n\nInitial step is always setup Augeas to your root path:\n\n```crystal\naugeas = Augeas.new(root: \"/path/to/root\")\n```\n\n### Getting a Value\n\nConsider getting value for a postgresql conf setting:\n\n```crystal\naugeas_file = augeas.load_file(\"/var/lib/pgsql/data/postgresql.conf\")\naugeas_file.get(\"data_directory\")\n# => \"/var/lib/postgresql/8.4/main\"\n```\n\n### Setting a value\n\n```crystal\naugeas_file = augeas.load_file(\"/var/lib/pgsql/data/postgresql.conf\")\naugeas_file.set(\"data_directory\", \"/my/new/path/to/postgresql/8.4/main\")\n# => true\naugeas.save # this is a important step, do not forget to save\n```\n\n## Development\n\nInstall the libraries on your local environment, write a spec, make it pass and :shipit:\n\n`LibAugeas` has all the methods mapped, the comments there are from the [C header](https://github.com/hercules-team/augeas/blob/4ceb8403039f57df9ecbcdeb08da7a356bd236fc/src/augeas.h).\n\nAugeas needs to pass a pointer to `Augeas` on every method, that's why we pass the `Augeas` crystal object to `Augeas::File`, so we can encapsulate the logic to manipulate a file inside it. We have the penalty on needing to call `Augeas#save`, but this is something we can abstract in the future with kind of DSL/block.\n\nThis library is on early stages, the next steps are (to be developed as needed):\n\n- [ ] Better error handling\n  - [ ] Specially when there are more than 1 node\n- [ ] Support augeas operations\n  - [ ] Single Node Operations (`aug_rm`, `aug_mv`, `aug_cp`)\n  - [ ] Deal with matches (`aug_match`)\n  - [ ] Support `aug_ns_*` functions\n\nAbout error handling, as we need to check the error messages on `Augeas`, the idea is to centralize all the error message / exceptions in one place, for now keeping in one method works, maybe a refactor to a new file can make sense.\n\n## Contributing\n\n1. Fork it (<https://github.com/fernandes/augeas/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Celso Fernandes](https://github.com/fernandes)\n","program":{"html_id":"augeas/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"augeas","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"augeas/Augeas","path":"Augeas.html","kind":"class","full_name":"Augeas","name":"Augeas","abstract":false,"superclass":{"html_id":"augeas/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"augeas/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"augeas/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/augeas.cr","line_number":4,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L4"}],"repository_name":"augeas","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This is the main Augeas class, the entrypoint to all Augeas operations","summary":"<p>This is the main Augeas class, the entrypoint to all Augeas operations</p>","class_methods":[],"constructors":[{"html_id":"new(root:String,loadpath:String?=nil,flags:UInt32=0)-class-method","name":"new","doc":"Initiale the class specifying your root, the lens loadpath and any flags\nRight now we are only forwaring the flags to LibAugeas, maybe in the future\nwe can handle it more the _crystal way™_\n\n```\nAugeas.new(root: \"/path/to/root\", loadpath: \"/path/to/leans\", flags: 2)\n```","summary":"<p>Initiale the class specifying your root, the lens loadpath and any flags Right now we are only forwaring the flags to LibAugeas, maybe in the future we can handle it more the <em>crystal way™</em></p>","abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"String"},{"name":"loadpath","doc":null,"default_value":"nil","external_name":"loadpath","restriction":"String | ::Nil"},{"name":"flags","doc":null,"default_value":"0","external_name":"flags","restriction":"UInt32"}],"args_string":"(root : String, loadpath : String? = nil, flags : UInt32 = 0)","args_html":"(root : String, loadpath : String? = <span class=\"n\">nil</span>, flags : UInt32 = <span class=\"n\">0</span>)","location":{"filename":"src/augeas.cr","line_number":26,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L26"},"def":{"name":"new","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"String"},{"name":"loadpath","doc":null,"default_value":"nil","external_name":"loadpath","restriction":"String | ::Nil"},{"name":"flags","doc":null,"default_value":"0","external_name":"flags","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(root, loadpath, flags)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"check_aug_error-instance-method","name":"check_aug_error","doc":"Check error on augeas C struct\n\nThe main idea is to keep here all possible errors that can happen\n\nInitially check augeas for an error, if not returns true, otherwise\nFetch the `error_message`, `error_minor_message` and `error_details`\n\nAfter that checks the `error_message` against known values, if any is found\nmethod raises an an exception passing error details as its message","summary":"<p>Check error on augeas C struct</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/augeas.cr","line_number":58,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L58"},"def":{"name":"check_aug_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (LibAugeas.aug_error(self)) == 0\n  return true\nend\nmsg = LibAugeas.aug_error_message(self)\nif (msg)\n  error_message = String.new(msg)\nend\nmsg = LibAugeas.aug_error_minor_message(self)\nif (msg)\n  error_minor_message = String.new(msg)\nend\nmsg = LibAugeas.aug_error_details(self)\nif (msg)\n  error_details = String.new(msg)\nend\ncase error_message\nwhen \"Lens not found\"\n  raise(LensNotFound.new(error_details))\nend\n"}},{"html_id":"finalize-instance-method","name":"finalize","doc":"Close Augeas C Struct (to free everything related to it)","summary":"<p>Close Augeas C Struct (to free everything related to it)</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/augeas.cr","line_number":83,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L83"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibAugeas.aug_close(self)"}},{"html_id":"flags:UInt32-instance-method","name":"flags","doc":"Augeas control flags specified on the `.new`","summary":"<p>Augeas control flags specified on the <code><a href=\"Augeas.html#new(root:String,loadpath:String?=nil,flags:UInt32=0)-class-method\">.new</a></code></p>","abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/augeas.cr","line_number":17,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L17"},"def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags"}},{"html_id":"load_file(path:String)-instance-method","name":"load_file","doc":"Load a file into the Augeas tree\n\n```\nload_file(\"/path/to/my-config-file\")\n```","summary":"<p>Load a file into the Augeas tree</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/augeas.cr","line_number":35,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L35"},"def":{"name":"load_file","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibAugeas.aug_load_file(@pointer, path)\ncheck_aug_error\nAugeas::File.new(augeas: self, path: path)\n"}},{"html_id":"loadpath:String?-instance-method","name":"loadpath","doc":"Load path for augeas lens specified on the `.new","summary":"<p>Load path for augeas lens specified on the `.new</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/augeas.cr","line_number":14,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L14"},"def":{"name":"loadpath","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@loadpath"}},{"html_id":"root:String-instance-method","name":"root","doc":"Root specified on the `.new`","summary":"<p>Root specified on the <code><a href=\"Augeas.html#new(root:String,loadpath:String?=nil,flags:UInt32=0)-class-method\">.new</a></code></p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/augeas.cr","line_number":11,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L11"},"def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root"}},{"html_id":"save-instance-method","name":"save","doc":"Save all changes in the augeas tree to the respective files\nps: Only modified files are written\n\ntip: Do not forget to call this method after performing changes","summary":"<p>Save all changes in the augeas tree to the respective files ps: Only modified files are written</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/augeas.cr","line_number":45,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L45"},"def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibAugeas.aug_save(self)"}},{"html_id":"to_unsafe:Pointer(LibAugeas::Augeas)-instance-method","name":"to_unsafe","doc":"Pointer to C Struct","summary":"<p>Pointer to C Struct</p>","abstract":false,"args":[],"args_string":" : Pointer(LibAugeas::Augeas)","args_html":" : Pointer(LibAugeas::Augeas)","location":{"filename":"src/augeas.cr","line_number":88,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L88"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pointer"}}],"macros":[],"types":[{"html_id":"augeas/Augeas/File","path":"Augeas/File.html","kind":"class","full_name":"Augeas::File","name":"File","abstract":false,"superclass":{"html_id":"augeas/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"augeas/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"augeas/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/augeas/file.cr","line_number":5,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L5"}],"repository_name":"augeas","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"augeas/Augeas","kind":"class","full_name":"Augeas","name":"Augeas"},"doc":"Usually the full path to the config file, needs to be speficied, when\ngetting and setting values. Using this file, this is not needed.","summary":"<p>Usually the full path to the config file, needs to be speficied, when getting and setting values.</p>","class_methods":[],"constructors":[{"html_id":"new(augeas:Augeas,path:String)-class-method","name":"new","doc":"Initiale Augeas::File abstraction, `@augeas` is needed to perform\naugeas operations on it, and the `@path` is the full path to the\nconfig file.\n\n```\naugeas = Augeas.new(root: \"/path/to\")\naugeas_file = Augeas::File.new(augeas: augeas, path: \"/path/to/config-file\")\n```","summary":"<p>Initiale Augeas::File abstraction, <code>@augeas</code> is needed to perform augeas operations on it, and the <code>@path</code> is the full path to the config file.</p>","abstract":false,"args":[{"name":"augeas","doc":null,"default_value":"","external_name":"augeas","restriction":"Augeas"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(augeas : Augeas, path : String)","args_html":"(augeas : <a href=\"../Augeas.html\">Augeas</a>, path : String)","location":{"filename":"src/augeas/file.cr","line_number":17,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L17"},"def":{"name":"new","args":[{"name":"augeas","doc":null,"default_value":"","external_name":"augeas","restriction":"Augeas"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(augeas, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"get(key)-instance-method","name":"get","doc":"Get a settings value from the config file\n\nLet take postgresql as example, consider we have a config file like this\n   data_directory = '/var/lib/postgresql/8.4/main'          # use data in another directory\n\nAfter instantiating the class, get can be used as:\n\n```\nget(\"data_directory\")\n# => \"/var/lib/postgresql/8.4/main\"\n```","summary":"<p>Get a settings value from the config file</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/augeas/file.cr","line_number":31,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L31"},"def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Pointer(LibC::Char).malloc(1)\nfull_path = \"/files#{path}/#{key}\"\nLibAugeas.aug_get(@augeas, full_path, pointerof(result))\nif result\n  return String.new(result)\nend\nnil\n"}},{"html_id":"lens_name-instance-method","name":"lens_name","doc":"Return the lens name for this file\n\nWhen Augeas loads a file, it associates a lens with it, so\nthis method looks up and returns the lens name","summary":"<p>Return the lens name for this file</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/augeas/file.cr","line_number":59,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L59"},"def":{"name":"lens_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibAugeas.aug_defvar(@augeas, \"info\", \"/augeas/files#{path}\")\nlens_name = Pointer(LibC::Char).malloc(1)\nLibAugeas.aug_get(@augeas, \"$info/lens\", pointerof(lens_name))\nif (lens_name)\n  String.new(lens_name)\nelse\n  nil\nend\n"}},{"html_id":"path:String-instance-method","name":"path","doc":"Path to the config file, specified in the `.new` method","summary":"<p>Path to the config file, specified in the <code><a href=\"../Augeas/File.html#new(augeas:Augeas,path:String)-class-method\">.new</a></code> method</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/augeas/file.cr","line_number":7,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L7"},"def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path"}},{"html_id":"set(key,value)-instance-method","name":"set","doc":"Set a settings value on the config file\nAs Augeas keeps the modifications in memory, don't\nforget to call `Augeas#save` after making changes\n\n```\nset(\"data_directory\", \"/path/to/data_directory\")\n```","summary":"<p>Set a settings value on the config file As Augeas keeps the modifications in memory, don't forget to call <code><a href=\"../Augeas.html#save-instance-method\">Augeas#save</a></code> after making changes</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/augeas/file.cr","line_number":47,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas/file.cr#L47"},"def":{"name":"set","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"full_path = \"/files#{path}/#{key}\"\naugeas_ret = LibAugeas.aug_set(@augeas, full_path, value)\nif augeas_ret == 0\n  return true\nend\nfalse\n"}}],"macros":[],"types":[]},{"html_id":"augeas/Augeas/LensNotFound","path":"Augeas/LensNotFound.html","kind":"class","full_name":"Augeas::LensNotFound","name":"LensNotFound","abstract":false,"superclass":{"html_id":"augeas/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"augeas/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"augeas/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"augeas/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/augeas.cr","line_number":6,"url":"https://github.com/fernandes/augeas.cr/blob/f761c3f12871cb473946de75abeaf6e84fe1b049/src/augeas.cr#L6"}],"repository_name":"augeas","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"augeas/Augeas","kind":"class","full_name":"Augeas","name":"Augeas"},"doc":"Error raised when a file is loaded and Augeas has no lens to process it","summary":"<p>Error raised when a file is loaded and Augeas has no lens to process it</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}})